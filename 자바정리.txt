변수 : 값을 저장하기위해 메모리 공간에 붙여진 이름.
변수의 생명주기(생성~소멸) : 변수를 선언한 블럭 내부에서만 접근이 가능하다.
식 : 피연산자 연산자 피연산자

지역변수 : 메소드내에 선언된 변수
		초기화 이후에 사용할 수 있다.
		초기화 : 변수가 선언된 이후 최초로 값을 할당하는 표현식

매개변수(파라미터, 인수) : 메소드 선언부에서 메소드외부에서 입력받기위해 선언된 변수
					메소드내에서 지역변수처럼 사용된다.
		
타입 : 변수의 값을 종류와 범위를 결정함.
	  기본형(8개), 참조형 2가지가 존재
	  
연산자 : 산술>비교>논리>대입  
		증감연산자(i++,++i,--i,i--)
		부호연산자(+,-)
		문자연결연산자(+) : 피연산자 중 하나라도 문자열이면 연결하여 문자열로 반환
		(타입) : 형변환 연산자

실행 클래스 : 메인 메소드를 포함하고 있는 클래스.

라이브러리 클래스: 메인 메소드를 포함하고 있지 않는 클래스
		-종류 1. 자바 언어가 기본적으로 제공해주는 클래스 (표준클래스, 빌드인클래스, 표준라이브러리)
			 2. 개발자가 필요에 의해서 생성해서 사용하는 클래스
			 3. (제3자가 제공하는 클래스) 3th party library, open library

배열 : 하나의 변수로 여러개의 값을 메모리 연속공간에 저장할수 있는 자료구조

배열요소 : 배열에 저장된 값 하나하나를 뜻함.

배열요소접근 방법 : 배열변수이름[인덱스]

배열선언 : int[] 변수이름 = new int[3]

배열생성 : 변수이름 = new int {요소의 크기}

null : 잠초형 변수만 가질수 있는 값
		힙메모리에 생성된 아무 객체도 참조하지 않음.
	
표현식 : 하나의 값으로 평가되는 식(값, 변수, 식, 메소드호출)

class : 개념정의 ex) 실제 움직이는 자동차
		명사(상태), 동사(행위, 동작, 서비스, 역할, 책임)
		
		- 설계과정 : 현실세계의 객체 (눈에보이는 객체, 눈에 보이지 않는(철학,관념,상상하는 그 무엇))
					=> 추상화 => 개념설계(class) => 객체화(인스턴스화) => 가상세계의 객체(인스턴스)
					ex) 자동차 => 추상화(명사, 동사) => class정의 => new 생성자() => 가상세계의 자동차 
					ex) 교육생 => 추상화(명사, 동사) => class정의 => new 생성자() => 가상세계의 교육생 
				-추상화 : ex)지하철 노선도
				
instance : 개념을 실체화 한 것. ex) 실제 움직이는 자동차

instance화 하는 방법(=실체화하는 방법) : new 생성자메소드();

가상세계 : 메모리 공간 - 프로그래밍
		 도화지 	- 	미술
		 원고지 	- 	소설

현실세계 : 인간이 사는 세상.

[class 구조]
개념 {
	속성.. (명사, 특성, 데이터, 정보)
	행위.. (동사, 행위, 서비스 )
}

class 개념 {
	맴버 필드;
	
	생성자 메소드;		==> new 개념();
	
	멤버 메소드;
}

접근 제한자 (Access modifire)
	: 식별자(필드, 메소드, 클래스)의 가시범위
1.public	: 어디서든 접근가능.
2.default (접근제한자를 명시하지 않는 경우)	: 동일 패키지면 접근가능.
3.protected	: 동일 패키지 및 자식클래스에서만 접근가능.
4.private   : 동일 클래스내에서만 접근가능.

public -> protected -> default -> private

모듈 (module)> 패키지 (package) > 클래스 (class)




































